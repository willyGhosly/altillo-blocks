{"version":3,"file":"index.js","mappings":"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","sources":["webpack://blocks/./iframe/src/edit.js","webpack://blocks/./iframe/src/save.js","webpack://blocks/external window \"React\"","webpack://blocks/external window [\"wp\",\"blockEditor\"]","webpack://blocks/external window [\"wp\",\"blocks\"]","webpack://blocks/external window [\"wp\",\"components\"]","webpack://blocks/external window [\"wp\",\"element\"]","webpack://blocks/webpack/bootstrap","webpack://blocks/webpack/runtime/compat get default export","webpack://blocks/webpack/runtime/define property getters","webpack://blocks/webpack/runtime/hasOwnProperty shorthand","webpack://blocks/webpack/runtime/make namespace object","webpack://blocks/./iframe/src/index.js"],"sourcesContent":["import { InspectorControls } from '@wordpress/block-editor';\r\nimport { useBlockProps, RichText } from '@wordpress/block-editor';\r\nimport { Panel, PanelBody, TextareaControl, TextControl } from '@wordpress/components';\r\n\r\nimport React from 'react';\r\n\r\nconst Edit = (props) => {\r\n    const { attributes, setAttributes } = props;\r\n    const { name, code } = attributes;\r\n\r\n    const iframeExample = '<iframe width=\"560\" height=\"315\" ...></iframe>';\r\n    const regex = /<iframe.*<\\/iframe>/;\r\n    const isIframe = regex.test(code);\r\n\r\n    const blockProps = useBlockProps({\r\n        className: 'wiframe'\r\n    });\r\n    return (\r\n        <>\r\n            <InspectorControls>\r\n                <Panel>\r\n                    <PanelBody title=\"Iframe\" initialOpen={true}>\r\n                        <TextControl\r\n                            label=\"Nombre\"\r\n                            value={name}\r\n                            onChange={(value) => setAttributes({ name: value })}\r\n                        />\r\n                        <TextareaControl\r\n                            label=\"Iframe\"\r\n                            placeholder=\"AGREGAR CODIGO IFRAME AQUI\"\r\n                            value={code}\r\n                            onChange={(value) => setAttributes({ code: value })}\r\n                        />\r\n                        <p>Ejemplo:</p>\r\n                        <p>{iframeExample}</p>\r\n                    </PanelBody>\r\n                </Panel>\r\n            </InspectorControls>\r\n            <div {...blockProps}>\r\n                <RichText\r\n                    tagName='p'\r\n                    className=\"wiframe__title\"\r\n                    placeholder='Agregar un titulo.'\r\n                    value={name}\r\n                    onChange={(value) => setAttributes({ name: value })}\r\n                />\r\n                {isIframe &&\r\n                    <div className='wiframe__wrapper'>\r\n                        <p className='wiframe__p'>Previsualización</p>\r\n                        <div className='wiframe__inner'>\r\n                            <div className='wiframe__preview' dangerouslySetInnerHTML={{ __html: code }} />\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {isIframe == false &&\r\n                    <p className='wiframe__invalid'>Previsualización sin Iframe</p>\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Edit;","import { useBlockProps } from '@wordpress/block-editor';\r\n\r\nconst Save = (props) => {\r\n    const { attributes } = props;\r\n    const { name, code } = attributes;\r\n    const blockProps = useBlockProps.save();\r\n\r\n    const regex = /<iframe.*<\\/iframe>/;\r\n    const isIframe = regex.test(code);\r\n\r\n    return (\r\n        <div {...blockProps}>\r\n            {\r\n                isIframe &&\r\n                <p className=\"wopeniframe\" data-iframe={code}>{name}</p>\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Save;\r\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from \"@wordpress/blocks\";\r\n\r\nimport edit from './edit';\r\nimport save from \"./save\";\r\n\r\nregisterBlockType('altillo-blocks/iframe', {\r\n    edit,\r\n    save,\r\n})\r\n"],"names":["InspectorControls","useBlockProps","RichText","Panel","PanelBody","TextareaControl","TextControl","React","Edit","props","attributes","setAttributes","name","code","iframeExample","regex","isIframe","test","blockProps","className","value","__html","Save","save","registerBlockType","edit"],"sourceRoot":""}